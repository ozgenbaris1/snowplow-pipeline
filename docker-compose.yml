version: "3"

x-iglu-server: &iglu-server
  image: snowplow/iglu-server:0.10.0
  environment:
    IGLU_SUPER_API_KEY: ${IGLU_SUPER_API_KEY:-5fb4713d-73ad-4163-93a9-2b82f0177c5b}
    IGLU_DB_PASSWORD: ${IGLU_DB_PASSWORD:-iglusecret}
  depends_on:
    - postgres
  volumes:
    - "./iglu-server-config/application.conf:/snowplow/config/config.hocon"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.14
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log
      - secrets:/etc/zookeeper/secrets

  kafka:
    image: confluentinc/cp-kafka:6.0.14
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
      - secrets:/etc/kafka/secrets

  collector:
    image: snowplow/scala-stream-collector-kafka:2.9.0
    command: [ "--config", "/snowplow/config/config.hocon" ]
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    volumes:
      - ./collector:/snowplow/config
    environment:
      - "SP_JAVA_OPTS=-Xms512m -Xmx512m"

  ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - 8088:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka

  stream-enrich:
    image: snowplow/snowplow-enrich-kafka:3.8.1
    command: [
      "--config", "/snowplow/config/config.hocon",
      "--enrichments", "/snowplow/config/enrichments",
      "--iglu-config", "/snowplow/config/resolver.json"
    ]
    depends_on:
      - collector
    volumes:
      - ./enrich:/snowplow/config
    environment:
      - "SP_JAVA_OPTS=-Xms512m -Xmx512m"

  postgres:
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: igludb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${IGLU_DB_PASSWORD:-iglusecret}

  iglu-server:
    <<: *iglu-server
    command: --config /snowplow/config/config.hocon
    ports:
      - "8081:8080"

  iglu-initializer:
    <<: *iglu-server
    command: setup --config /snowplow/config/config.hocon

  web:
    image: nginx
    volumes:
      - ./web:/usr/share/nginx/html
    ports:
      - "80:80"

  events-processor:
    build:
      context: ./events-processor

volumes:
  zk-data: {}
  zk-logs: {}
  kafka-data: {}
  secrets: {}
