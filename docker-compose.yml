version: "3"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.14
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-logs:/var/lib/zookeeper/log
      - secrets:/etc/zookeeper/secrets

  kafka:
    image: confluentinc/cp-kafka:6.0.14
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
      - secrets:/etc/kafka/secrets

  collector:
    image: snowplow/scala-stream-collector-kafka:2.9.0
    command: [ "--config", "/snowplow/config/config.hocon" ]
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    volumes:
      - ./collector:/snowplow/config
    environment:
      - "SP_JAVA_OPTS=-Xms512m -Xmx512m"

  stream-enrich:
    image: snowplow/stream-enrich-kafka:3.8.1
    command: [
      "--config", "/snowplow/config/config.hocon",
      "--resolver", "file:/snowplow/config/resolver.json"
    ]
    depends_on:
      - collector
    volumes:
      - ./enrich:/snowplow/config
    environment:
      - "SP_JAVA_OPTS=-Xms512m -Xmx512m"

  iglu-postgres:
    container_name: iglu-postgres
    image: postgres:10
    volumes:
      - ./iglu-server-config/init.sql:/docker-entrypoint-initdb.d/init.sql

  iglu-server:
    container_name: iglu-server
    image: snowplow-docker-registry.bintray.io/snowplow/iglu-server:0.4.0
    entrypoint: /usr/local/bin/wait-for-postgres.sh iglu-postgres --config /snowplow/config/application.conf
    depends_on:
      - iglu-postgres
    ports:
      - "8081:8081"
    volumes:
      - ./iglu-server-config/wait-for-postgres.sh:/usr/local/bin/wait-for-postgres.sh
      - ./iglu-server-config/application.conf:/snowplow/config/application.conf
    environment:
      - "SP_JAVA_OPTS=-Xms512m -Xmx512m"

  web:
    image: nginx
    volumes:
      - ./web:/usr/share/nginx/html
    ports:
      - "80:80"

  events-processor:
    build:
      context: ./events-processor

volumes:
  zk-data: {}
  zk-logs: {}
  kafka-data: {}
  secrets: {}
